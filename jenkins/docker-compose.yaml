version: "3.7"
services:
  nginx:
    container_name: reverse
    hostname: reverse
    image: nginx:latest
    volumes:
      - nginx-configuration:/etc/nginx
      - nginx-certs:/etc/ssl/private
    ports:
      - 80:80
    networks:
      - sonarnet

  sonarqube:
    image: sonarqube:8.2-community
    depends_on:
      - db
    ports:
      - "9000:9000"
    networks:
      - sonarnet
    environment:
      - sonar.jdbc.url=jdbc:postgresql://db:5432/sonar
      - sonar.jdbc.username=sonar
      - sonar.jdbc.password=sonar
    volumes:
      - sonarqube_conf:/opt/sonarqube/conf
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_bundled-plugins:/opt/sonarqube/lib/bundled-plugins

  db:
    image: postgres
    networks:
      - sonarnet
    environment:
      - POSTGRES_USER=sonar
      - POSTGRES_PASSWORD=sonar
      - POSTGRES_DB=sonarqube
    volumes:
      - postgresql:/var/lib/postgresql
      - postgresql_data:/var/lib/postgresql/data

  jenkins:
    build:
      context: .
      dockerfile: Dockerfile
    privileged: true
    user: root
    ports:
      - "8080:8080"
    container_name: jenkins-local
    volumes:
      - jenkins_data:/var/jenkins_home
      - docker_sock:/var/run/docker.sock
      - jenkins-docker-certs:/certs/client
    environment:
      - "JENKINS_OPTS=--prefix=/jenkins"
      - "DOCKER_TLS_CERTDIR=/certs"
    networks:
      - sonarnet

networks:
  sonarnet:
    name: sonarnet
    driver: bridge

volumes:
  sonarqube_conf: {}
  sonarqube_data: {}
  sonarqube_extensions: {}
  sonarqube_bundled-plugins: {}
  postgresql: {}
  postgresql_data: {}
  jenkins_data: {}
  docker_sock: {}
  jenkins-docker-certs: {}
  nginx-configuration: {}
  nginx-certs: {}
